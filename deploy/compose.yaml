volumes:
  socket:

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - 8000:8000
    restart: unless-stopped
    volumes:
      - ./conf.d:/etc/nginx/conf.d
      - socket:/socket
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    restart: unless-stopped
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 1m30s
      timeout: 10s
      retries: 5
      start_period: 5s
  fastapi:
    build: ..
    container_name: fastapi
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - socket:/app/socket
    depends_on:
      postgres:
        condition: service_healthy
      nginx:
        condition: service_started